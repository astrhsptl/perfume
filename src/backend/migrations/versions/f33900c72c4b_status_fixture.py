"""status_fixture

Revision ID: f33900c72c4b
Revises: a3e902fcf3a1
Create Date: 2024-08-26 00:53:39.020338

"""
from datetime import datetime
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import Session

# revision identifiers, used by Alembic.
revision: str = 'f33900c72c4b'
down_revision: Union[str, None] = 'a3e902fcf3a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'brand', ['id'])
    op.create_unique_constraint(None, 'cart', ['id'])
    op.create_unique_constraint(None, 'cart_perfume', ['id'])
    op.create_unique_constraint(None, 'file', ['id'])
    op.create_unique_constraint(None, 'perfume', ['id'])
    op.create_unique_constraint(None, 'perfume_type', ['id'])
    op.create_unique_constraint(None, 'perfume_volume', ['id'])
    op.create_unique_constraint(None, 'status', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])

    bind = op.get_bind()
    session = Session(bind=bind)

    session.execute(
        sa.text(
            'INSERT INTO "status" (id, title, description, hidden, create_time) VALUES (:id, :title, :description, :hidden, :create_time)',
        ),
        [
            {"id": "91423570-0e50-4685-848b-62d4fe8e1110", "title": "Открыта", 
                "description": "Открыта", "hidden": False, "create_time": datetime.now()},
            {"id": "a63a63ed-aa4f-43ac-b209-bcd388b47372", "title": "Закрыта", 
                "description": "Закрыта", "hidden": False, "create_time": datetime.now()},
        ],
    )


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'status', type_='unique')
    op.drop_constraint(None, 'perfume_volume', type_='unique')
    op.drop_constraint(None, 'perfume_type', type_='unique')
    op.drop_constraint(None, 'perfume', type_='unique')
    op.drop_constraint(None, 'file', type_='unique')
    op.drop_constraint(None, 'cart_perfume', type_='unique')
    op.drop_constraint(None, 'cart', type_='unique')
    op.drop_constraint(None, 'brand', type_='unique')
    # ### end Alembic commands ###
